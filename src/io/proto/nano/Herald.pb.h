/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_NPB_HERALD_PB_H_INCLUDED
#define PB_NPB_HERALD_PB_H_INCLUDED
#include <pb.h>
#include "TypeEnum.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _npb_Herald { 
    npb_TypeEnum type; 
} npb_Herald;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define npb_Herald_init_default                  {npb_Unknown_t}
#define npb_Herald_init_zero                     {_npb_TypeEnum_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define npb_Herald_type_tag                      1

/* Struct field encoding specification for nanopb */
#define npb_Herald_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    type,              1)
#define npb_Herald_CALLBACK NULL
#define npb_Herald_DEFAULT NULL

extern const pb_msgdesc_t npb_Herald_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define npb_Herald_fields &npb_Herald_msg

/* Maximum encoded size of messages (where known) */
#define npb_Herald_size                          2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
