// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ls.proto.symbolic.proto

#include "ls.proto.symbolic.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace ls {
namespace proto {
namespace symbolic {
constexpr OrdinaryDifferentialEquation::OrdinaryDifferentialEquation(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : functions_(nullptr)
  , states_(nullptr)
  , inputs_(nullptr)
  , time_(nullptr){}
struct OrdinaryDifferentialEquationDefaultTypeInternal {
  constexpr OrdinaryDifferentialEquationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OrdinaryDifferentialEquationDefaultTypeInternal() {}
  union {
    OrdinaryDifferentialEquation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OrdinaryDifferentialEquationDefaultTypeInternal _OrdinaryDifferentialEquation_default_instance_;
}  // namespace symbolic
}  // namespace proto
}  // namespace ls
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ls_2eproto_2esymbolic_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ls_2eproto_2esymbolic_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ls_2eproto_2esymbolic_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ls_2eproto_2esymbolic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ls::proto::symbolic::OrdinaryDifferentialEquation, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ls::proto::symbolic::OrdinaryDifferentialEquation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ls::proto::symbolic::OrdinaryDifferentialEquation, functions_),
  PROTOBUF_FIELD_OFFSET(::ls::proto::symbolic::OrdinaryDifferentialEquation, states_),
  PROTOBUF_FIELD_OFFSET(::ls::proto::symbolic::OrdinaryDifferentialEquation, inputs_),
  PROTOBUF_FIELD_OFFSET(::ls::proto::symbolic::OrdinaryDifferentialEquation, time_),
  0,
  1,
  2,
  3,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::ls::proto::symbolic::OrdinaryDifferentialEquation)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ls::proto::symbolic::_OrdinaryDifferentialEquation_default_instance_),
};

const char descriptor_table_protodef_ls_2eproto_2esymbolic_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027ls.proto.symbolic.proto\022\021ls.proto.symb"
  "olic\032\024ls.proto.ginac.proto\"\367\001\n\034OrdinaryD"
  "ifferentialEquation\022+\n\tfunctions\030\001 \001(\0132\023"
  ".ls.proto.ginac.lstH\000\210\001\001\022(\n\006states\030\002 \001(\013"
  "2\023.ls.proto.ginac.lstH\001\210\001\001\022(\n\006inputs\030\003 \001"
  "(\0132\023.ls.proto.ginac.lstH\002\210\001\001\022)\n\004time\030\004 \001"
  "(\0132\026.ls.proto.ginac.symbolH\003\210\001\001B\014\n\n_func"
  "tionsB\t\n\007_statesB\t\n\007_inputsB\007\n\005_timeb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ls_2eproto_2esymbolic_2eproto_deps[1] = {
  &::descriptor_table_ls_2eproto_2eginac_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ls_2eproto_2esymbolic_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ls_2eproto_2esymbolic_2eproto = {
  false, false, 324, descriptor_table_protodef_ls_2eproto_2esymbolic_2eproto, "ls.proto.symbolic.proto", 
  &descriptor_table_ls_2eproto_2esymbolic_2eproto_once, descriptor_table_ls_2eproto_2esymbolic_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_ls_2eproto_2esymbolic_2eproto::offsets,
  file_level_metadata_ls_2eproto_2esymbolic_2eproto, file_level_enum_descriptors_ls_2eproto_2esymbolic_2eproto, file_level_service_descriptors_ls_2eproto_2esymbolic_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_ls_2eproto_2esymbolic_2eproto_getter() {
  return &descriptor_table_ls_2eproto_2esymbolic_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_ls_2eproto_2esymbolic_2eproto(&descriptor_table_ls_2eproto_2esymbolic_2eproto);
namespace ls {
namespace proto {
namespace symbolic {

// ===================================================================

class OrdinaryDifferentialEquation::_Internal {
 public:
  using HasBits = decltype(std::declval<OrdinaryDifferentialEquation>()._has_bits_);
  static const ::ls::proto::ginac::lst& functions(const OrdinaryDifferentialEquation* msg);
  static void set_has_functions(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ls::proto::ginac::lst& states(const OrdinaryDifferentialEquation* msg);
  static void set_has_states(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ls::proto::ginac::lst& inputs(const OrdinaryDifferentialEquation* msg);
  static void set_has_inputs(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ls::proto::ginac::symbol& time(const OrdinaryDifferentialEquation* msg);
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::ls::proto::ginac::lst&
OrdinaryDifferentialEquation::_Internal::functions(const OrdinaryDifferentialEquation* msg) {
  return *msg->functions_;
}
const ::ls::proto::ginac::lst&
OrdinaryDifferentialEquation::_Internal::states(const OrdinaryDifferentialEquation* msg) {
  return *msg->states_;
}
const ::ls::proto::ginac::lst&
OrdinaryDifferentialEquation::_Internal::inputs(const OrdinaryDifferentialEquation* msg) {
  return *msg->inputs_;
}
const ::ls::proto::ginac::symbol&
OrdinaryDifferentialEquation::_Internal::time(const OrdinaryDifferentialEquation* msg) {
  return *msg->time_;
}
void OrdinaryDifferentialEquation::clear_functions() {
  if (functions_ != nullptr) functions_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void OrdinaryDifferentialEquation::clear_states() {
  if (states_ != nullptr) states_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void OrdinaryDifferentialEquation::clear_inputs() {
  if (inputs_ != nullptr) inputs_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void OrdinaryDifferentialEquation::clear_time() {
  if (time_ != nullptr) time_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
OrdinaryDifferentialEquation::OrdinaryDifferentialEquation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ls.proto.symbolic.OrdinaryDifferentialEquation)
}
OrdinaryDifferentialEquation::OrdinaryDifferentialEquation(const OrdinaryDifferentialEquation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_functions()) {
    functions_ = new ::ls::proto::ginac::lst(*from.functions_);
  } else {
    functions_ = nullptr;
  }
  if (from._internal_has_states()) {
    states_ = new ::ls::proto::ginac::lst(*from.states_);
  } else {
    states_ = nullptr;
  }
  if (from._internal_has_inputs()) {
    inputs_ = new ::ls::proto::ginac::lst(*from.inputs_);
  } else {
    inputs_ = nullptr;
  }
  if (from._internal_has_time()) {
    time_ = new ::ls::proto::ginac::symbol(*from.time_);
  } else {
    time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ls.proto.symbolic.OrdinaryDifferentialEquation)
}

void OrdinaryDifferentialEquation::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&functions_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&functions_)) + sizeof(time_));
}

OrdinaryDifferentialEquation::~OrdinaryDifferentialEquation() {
  // @@protoc_insertion_point(destructor:ls.proto.symbolic.OrdinaryDifferentialEquation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OrdinaryDifferentialEquation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete functions_;
  if (this != internal_default_instance()) delete states_;
  if (this != internal_default_instance()) delete inputs_;
  if (this != internal_default_instance()) delete time_;
}

void OrdinaryDifferentialEquation::ArenaDtor(void* object) {
  OrdinaryDifferentialEquation* _this = reinterpret_cast< OrdinaryDifferentialEquation* >(object);
  (void)_this;
}
void OrdinaryDifferentialEquation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OrdinaryDifferentialEquation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrdinaryDifferentialEquation::Clear() {
// @@protoc_insertion_point(message_clear_start:ls.proto.symbolic.OrdinaryDifferentialEquation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(functions_ != nullptr);
      functions_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(states_ != nullptr);
      states_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(inputs_ != nullptr);
      inputs_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(time_ != nullptr);
      time_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrdinaryDifferentialEquation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ls.proto.ginac.lst functions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_functions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ls.proto.ginac.lst states = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_states(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ls.proto.ginac.lst inputs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_inputs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ls.proto.ginac.symbol time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OrdinaryDifferentialEquation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ls.proto.symbolic.OrdinaryDifferentialEquation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .ls.proto.ginac.lst functions = 1;
  if (_internal_has_functions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::functions(this), target, stream);
  }

  // optional .ls.proto.ginac.lst states = 2;
  if (_internal_has_states()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::states(this), target, stream);
  }

  // optional .ls.proto.ginac.lst inputs = 3;
  if (_internal_has_inputs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::inputs(this), target, stream);
  }

  // optional .ls.proto.ginac.symbol time = 4;
  if (_internal_has_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::time(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ls.proto.symbolic.OrdinaryDifferentialEquation)
  return target;
}

size_t OrdinaryDifferentialEquation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ls.proto.symbolic.OrdinaryDifferentialEquation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .ls.proto.ginac.lst functions = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *functions_);
    }

    // optional .ls.proto.ginac.lst states = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *states_);
    }

    // optional .ls.proto.ginac.lst inputs = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *inputs_);
    }

    // optional .ls.proto.ginac.symbol time = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *time_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrdinaryDifferentialEquation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ls.proto.symbolic.OrdinaryDifferentialEquation)
  GOOGLE_DCHECK_NE(&from, this);
  const OrdinaryDifferentialEquation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OrdinaryDifferentialEquation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ls.proto.symbolic.OrdinaryDifferentialEquation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ls.proto.symbolic.OrdinaryDifferentialEquation)
    MergeFrom(*source);
  }
}

void OrdinaryDifferentialEquation::MergeFrom(const OrdinaryDifferentialEquation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ls.proto.symbolic.OrdinaryDifferentialEquation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_functions()->::ls::proto::ginac::lst::MergeFrom(from._internal_functions());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_states()->::ls::proto::ginac::lst::MergeFrom(from._internal_states());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_inputs()->::ls::proto::ginac::lst::MergeFrom(from._internal_inputs());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_time()->::ls::proto::ginac::symbol::MergeFrom(from._internal_time());
    }
  }
}

void OrdinaryDifferentialEquation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ls.proto.symbolic.OrdinaryDifferentialEquation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrdinaryDifferentialEquation::CopyFrom(const OrdinaryDifferentialEquation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ls.proto.symbolic.OrdinaryDifferentialEquation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrdinaryDifferentialEquation::IsInitialized() const {
  return true;
}

void OrdinaryDifferentialEquation::InternalSwap(OrdinaryDifferentialEquation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrdinaryDifferentialEquation, time_)
      + sizeof(OrdinaryDifferentialEquation::time_)
      - PROTOBUF_FIELD_OFFSET(OrdinaryDifferentialEquation, functions_)>(
          reinterpret_cast<char*>(&functions_),
          reinterpret_cast<char*>(&other->functions_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrdinaryDifferentialEquation::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ls_2eproto_2esymbolic_2eproto_getter, &descriptor_table_ls_2eproto_2esymbolic_2eproto_once,
      file_level_metadata_ls_2eproto_2esymbolic_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace symbolic
}  // namespace proto
}  // namespace ls
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ls::proto::symbolic::OrdinaryDifferentialEquation* Arena::CreateMaybeMessage< ::ls::proto::symbolic::OrdinaryDifferentialEquation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ls::proto::symbolic::OrdinaryDifferentialEquation >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
