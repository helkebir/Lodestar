//
// Created by helkebir on 6/27/21.
//

#ifndef LODESTAR_TADPOLEFUNCTIONS_HPP
#define LODESTAR_TADPOLEFUNCTIONS_HPP

#include <Eigen/Dense>
#include <cmath>

/**
 * @param x State array:
 *     _s_x_, _s_y_, _s_phi_
 * @param u Input array:
 *     _s_ul_, _s_ur_
 * @param t Time.
 *
 * @return Jacobian matrix.
 */
// Function automatically generated by Lodestar
Eigen::Matrix<double, 3, 3>
tadpoleJacStates(const Eigen::Matrix<double, 3, 1> &x, const Eigen::Matrix<double, 2, 1> &u, const double t = 0)
{
    Eigen::Matrix<double, 3, 3> mat;
    mat << 0.0, 0.0, -1.7500000000000002e-02 * sin(x[2]) * (u[0] + u[1]),
            0.0, 0.0, 1.7500000000000002e-02 * cos(x[2]) * (u[0] + u[1]),
            0.0, 0.0, 0.0;

    return mat;
}


/**
 * @param x State array:
 *     _s_x_, _s_y_, _s_phi_
 * @param u Input array:
 *     _s_ul_, _s_ur_
 * @param t Time.
 *
 * @return Jacobian matrix.
 */
// Function automatically generated by Lodestar
Eigen::Matrix<double, 3, 2>
tadpoleJacInput(const Eigen::Matrix<double, 3, 1> &x, const Eigen::Matrix<double, 2, 1> &u, const double t = 0)
{
    Eigen::Matrix<double, 3, 2> mat;
    mat << 1.7500000000000002e-02 * cos(x[2]), 1.7500000000000002e-02 * cos(x[2]),
            1.7500000000000002e-02 * sin(x[2]), 1.7500000000000002e-02 * sin(x[2]),
            -2.3625000000000005e-03, 2.3625000000000005e-03;

    return mat;
}

#endif //LODESTAR_TADPOLEFUNCTIONS_HPP
