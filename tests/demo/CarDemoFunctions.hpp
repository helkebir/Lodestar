//
// Created by Hamza El-Kebir on 6/17/21.
//

#ifndef LODESTAR_CARDEMOFUNCTIONS_HPP
#define LODESTAR_CARDEMOFUNCTIONS_HPP

#include <Eigen/Dense>

/**
 * @param x TState array:
 *     _s_x_, _s_y_, _s_vx_, _s_vy_, _s_psi_, _s_r_
 * @param u Input array:
 *     _s_f1_, _s_f2_
 * @param t Time.

 * @return Jacobian matrix.
 */
// Function automatically generated by Lodestar
Eigen::Matrix<double, 6, 6> jacStates(const double (&x)[6], const double (&u)[2], const double t = 0)
{
    Eigen::Matrix<double, 6, 6> mat;
    mat << 0.0, 0.0, 1.0, 0.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, -2.0 * sin(x[4]) * (u[1] + u[0]), 0.0,
            0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, -2.0 * cos(x[4]) * (u[1] + u[0]), 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
            0.0, 0.0, 0.0, 0.0, 0.0, 0.0;

    return mat;
}

Eigen::Matrix<double, 6, 1> dynamics(const double (&x)[6], const double (&u)[2], const double t = 0)
{
    Eigen::Matrix<double, 6, 1> mat;
    mat << x[1],
            2 * (u[0] + u[1]) * cos(x[4]),
            x[3],
            -2 * (u[0] + u[1]) * sin(x[4]),
            x[5],
            (u[0] - u[1]);

    return mat;
}


/**
 * @param x TState array:
 *     _s_x_, _s_y_, _s_vx_, _s_vy_, _s_psi_, _s_r_
 * @param u Input array:
 *     _s_f1_, _s_f2_
 * @param t Time.

 * @return Jacobian matrix.
 */
// Function automatically generated by Lodestar
Eigen::Matrix<double, 6, 2> jacInput(const double (&x)[6], const double (&u)[2], const double t = 0)
{
    Eigen::Matrix<double, 6, 2> mat;
    mat << 0.0, 0.0,
            2.0 * cos(x[4]), 2.0 * cos(x[4]),
            0.0, 0.0,
            -2.0 * sin(x[4]), -2.0 * sin(x[4]),
            0.0, 0.0,
            1.0, -1.0;

    return mat;
}

#endif //LODESTAR_CARDEMOFUNCTIONS_HPP
