/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_LS_PROTO_LS_PROTO_VECTOR_PB_H_INCLUDED
#define PB_LS_PROTO_LS_PROTO_VECTOR_PB_H_INCLUDED
#include <pb.h>
#include "ls.proto.types.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _ls_proto_VectorType { 
    ls_proto_VectorType_rowVector = 0, 
    ls_proto_VectorType_colVector = 1 
} ls_proto_VectorType;

/* Struct definitions */
typedef struct _ls_proto_VectorHerald { 
    ls_proto_Type type; 
    int32_t size; 
    bool has_vectorType;
    ls_proto_VectorType vectorType; 
} ls_proto_VectorHerald;


/* Helper constants for enums */
#define _ls_proto_VectorType_MIN ls_proto_VectorType_rowVector
#define _ls_proto_VectorType_MAX ls_proto_VectorType_colVector
#define _ls_proto_VectorType_ARRAYSIZE ((ls_proto_VectorType)(ls_proto_VectorType_colVector+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ls_proto_VectorHerald_init_default       {_ls_proto_Type_MIN, 0, false, _ls_proto_VectorType_MIN}
#define ls_proto_VectorHerald_init_zero          {_ls_proto_Type_MIN, 0, false, _ls_proto_VectorType_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define ls_proto_VectorHerald_type_tag           1
#define ls_proto_VectorHerald_size_tag           2
#define ls_proto_VectorHerald_vectorType_tag     4

/* Struct field encoding specification for nanopb */
#define ls_proto_VectorHerald_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    type,              1) \
X(a, STATIC,   REQUIRED, INT32,    size,              2) \
X(a, STATIC,   OPTIONAL, UENUM,    vectorType,        4)
#define ls_proto_VectorHerald_CALLBACK NULL
#define ls_proto_VectorHerald_DEFAULT NULL

extern const pb_msgdesc_t ls_proto_VectorHerald_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ls_proto_VectorHerald_fields &ls_proto_VectorHerald_msg

/* Maximum encoded size of messages (where known) */
#define ls_proto_VectorHerald_size               15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
